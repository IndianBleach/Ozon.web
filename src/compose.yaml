version: v1
services:

#services.storages
  serv-storage-mssql:
    container_name: serv-storage-mssql
    image: mcr.microsoft.com/mssql/server
    ports:
      - "7060:1433"
    environment:
      - MSSQL_SA_PASSWORD=Sample123!
      - ACCEPT_EULA=Y
    networks:
      - ozon-net

  serv-storage-grpc:
    container_name: serv-storage-grpc
    build: 
      context: .
      dockerfile: ./Services/Services.Storage/Storage.Grpc/Dockerfile
    ports:
      - "5010:5010"
    networks:
      - ozon-net
    depends_on:
      - serv-storage-mssql

#services.accounts
  serv-accounts-mssql:
    container_name: serv-accounts-mssql
    image: mcr.microsoft.com/mssql/server
    ports:
      - "7070:1433"
    environment:
      - MSSQL_SA_PASSWORD=Sample123!
      - ACCEPT_EULA=Y
    networks:
      - ozon-net

  serv-accounts-grpc:
    container_name: serv-accounts-grpc
    build: 
      context: .
      dockerfile: ./Services/Services.Accounts/Accounts.Grpc/Dockerfile
    ports:
      - "5005:5005"
    networks:
      - ozon-net
    depends_on:
      - serv-accounts-mssql

#services.auth
  serv-auth-redis:
    container_name: serv-auth-redis
    image: redis
    networks:
      - ozon-net
    ports:
      - "9443:9443"
      - "6379:6379"

  serv-auth-grpc:
    container_name: serv-auth-grpc
    build: 
      context: .
      dockerfile: ./Services/Services.Authorization/Dockerfile
    networks:
      - ozon-net
    depends_on:
      - serv-auth-redis
    ports:
      - "5000:5000"

#api
  ozon-api:
    container_name: ozon-api
    build: 
      context: .
      dockerfile: ./Ozon.Api/Dockerfile
    networks:
      - ozon-net
    ports:
      - "9095:80"
      - "9096:443"

networks:
  ozon-net:
    driver: bridge